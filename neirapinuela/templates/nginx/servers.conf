
{% for upstream_name, upstream_url in upstreams.items() %}
server {
        listen       443 ssl;
        server_name  {{ upstream_name }}.neirapinuela.es;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    # Protected application
    location / {
        # Requests must be authenticated
        auth_request /auth-proxy;

        # Relay the REMOTE_USER and X-WEBAUTH-USER headers
        # From the response of the authentication request
        # To the service
        auth_request_set $remoteUser $upstream_http_REMOTE_USER;
        proxy_set_header REMOTE_USER $remoteUser;

        auth_request_set $xWebauthUser $upstream_http_X_WEBAUTH_USER;
        proxy_set_header X-WEBAUTH-USER $xWebauthUser;

        # redirect 401 and 403 to login form
        error_page 401 403 /{{ default_lang_code }}/login;

        # end of contents of application.include

        proxy_pass {{upstream_url}};
    }
    location /auth-proxy {
    internal;

    proxy_pass http://127.0.0.1:{{ g.flask_port }}/auth;

    proxy_pass_request_body off;
    proxy_set_header Content-Length "";

    proxy_set_header X-Real-IP $remote_addr;

    # Login service returns a redirect to the original URI
    # and sets the cookie for the authenticator
    proxy_set_header X-Original-URI $request_uri;
    proxy_set_header Host $host:$server_port;
}
# End of application.include
    {% for lang_code in ("en", "es") %}
    location /{{ lang_code }}/login {
        proxy_pass http://127.0.0.1:{{ g.flask_port }}/{{ lang_code }}/login;
        proxy_set_header Host $host;
        proxy_set_header X-Original-URI $request_uri;
        proxy_set_header X-Real-IP $remote_addr;
    }
    location /{{ lang_code }}/logout {
        proxy_pass http://127.0.0.1:{{ g.flask_port }}/{{ lang_code }}/logout;
    }
    {% endfor %}

}

{% endfor %}
